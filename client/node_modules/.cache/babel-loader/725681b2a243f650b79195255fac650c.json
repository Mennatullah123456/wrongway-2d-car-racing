{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nvar ObservablePoint = /*#__PURE__*/function () {\n  function ObservablePoint(cb, scope) {\n    var x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var y = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    _classCallCheck(this, ObservablePoint);\n    this._x = x;\n    this._y = y;\n    this.cb = cb;\n    this.scope = scope;\n  }\n  _createClass(ObservablePoint, [{\n    key: \"clone\",\n    value: function clone() {\n      var cb = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.cb;\n      var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.scope;\n      return new ObservablePoint(cb, scope, this._x, this._y);\n    }\n  }, {\n    key: \"set\",\n    value: function set() {\n      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      if (this._x !== x || this._y !== y) {\n        this._x = x;\n        this._y = y;\n        this.cb.call(this.scope);\n      }\n      return this;\n    }\n  }, {\n    key: \"copyFrom\",\n    value: function copyFrom(p) {\n      if (this._x !== p.x || this._y !== p.y) {\n        this._x = p.x;\n        this._y = p.y;\n        this.cb.call(this.scope);\n      }\n      return this;\n    }\n  }, {\n    key: \"copyTo\",\n    value: function copyTo(p) {\n      p.set(this._x, this._y);\n      return p;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(p) {\n      return p.x === this._x && p.y === this._y;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"[@pixi/math:ObservablePoint x=\".concat(0, \" y=\", 0, \" scope=\", this.scope, \"]\");\n    }\n  }, {\n    key: \"x\",\n    get: function get() {\n      return this._x;\n    },\n    set: function set(value) {\n      if (this._x !== value) {\n        this._x = value;\n        this.cb.call(this.scope);\n      }\n    }\n  }, {\n    key: \"y\",\n    get: function get() {\n      return this._y;\n    },\n    set: function set(value) {\n      if (this._y !== value) {\n        this._y = value;\n        this.cb.call(this.scope);\n      }\n    }\n  }]);\n  return ObservablePoint;\n}();\nexport { ObservablePoint };","map":null,"metadata":{},"sourceType":"module"}