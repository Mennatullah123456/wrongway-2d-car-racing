{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar core = require('@pixi/core');\nvar colorMatrix = require('./colorMatrix.js');\nvar ColorMatrixFilter = /*#__PURE__*/function (_core$Filter) {\n  _inherits(ColorMatrixFilter, _core$Filter);\n  function ColorMatrixFilter() {\n    var _this;\n    _classCallCheck(this, ColorMatrixFilter);\n    var uniforms = {\n      m: new Float32Array([1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]),\n      uAlpha: 1\n    };\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColorMatrixFilter).call(this, core.defaultFilterVertex, colorMatrix[\"default\"], uniforms));\n    _this.alpha = 1;\n    return _this;\n  }\n  _createClass(ColorMatrixFilter, [{\n    key: \"_loadMatrix\",\n    value: function _loadMatrix(matrix) {\n      var multiply = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var newMatrix = matrix;\n      if (multiply) {\n        this._multiply(newMatrix, this.uniforms.m, matrix);\n        newMatrix = this._colorMatrix(newMatrix);\n      }\n      this.uniforms.m = newMatrix;\n    }\n  }, {\n    key: \"_multiply\",\n    value: function _multiply(out, a, b) {\n      out[0] = a[0] * b[0] + a[1] * b[5] + a[2] * b[10] + a[3] * b[15];\n      out[1] = a[0] * b[1] + a[1] * b[6] + a[2] * b[11] + a[3] * b[16];\n      out[2] = a[0] * b[2] + a[1] * b[7] + a[2] * b[12] + a[3] * b[17];\n      out[3] = a[0] * b[3] + a[1] * b[8] + a[2] * b[13] + a[3] * b[18];\n      out[4] = a[0] * b[4] + a[1] * b[9] + a[2] * b[14] + a[3] * b[19] + a[4];\n      out[5] = a[5] * b[0] + a[6] * b[5] + a[7] * b[10] + a[8] * b[15];\n      out[6] = a[5] * b[1] + a[6] * b[6] + a[7] * b[11] + a[8] * b[16];\n      out[7] = a[5] * b[2] + a[6] * b[7] + a[7] * b[12] + a[8] * b[17];\n      out[8] = a[5] * b[3] + a[6] * b[8] + a[7] * b[13] + a[8] * b[18];\n      out[9] = a[5] * b[4] + a[6] * b[9] + a[7] * b[14] + a[8] * b[19] + a[9];\n      out[10] = a[10] * b[0] + a[11] * b[5] + a[12] * b[10] + a[13] * b[15];\n      out[11] = a[10] * b[1] + a[11] * b[6] + a[12] * b[11] + a[13] * b[16];\n      out[12] = a[10] * b[2] + a[11] * b[7] + a[12] * b[12] + a[13] * b[17];\n      out[13] = a[10] * b[3] + a[11] * b[8] + a[12] * b[13] + a[13] * b[18];\n      out[14] = a[10] * b[4] + a[11] * b[9] + a[12] * b[14] + a[13] * b[19] + a[14];\n      out[15] = a[15] * b[0] + a[16] * b[5] + a[17] * b[10] + a[18] * b[15];\n      out[16] = a[15] * b[1] + a[16] * b[6] + a[17] * b[11] + a[18] * b[16];\n      out[17] = a[15] * b[2] + a[16] * b[7] + a[17] * b[12] + a[18] * b[17];\n      out[18] = a[15] * b[3] + a[16] * b[8] + a[17] * b[13] + a[18] * b[18];\n      out[19] = a[15] * b[4] + a[16] * b[9] + a[17] * b[14] + a[18] * b[19] + a[19];\n      return out;\n    }\n  }, {\n    key: \"_colorMatrix\",\n    value: function _colorMatrix(matrix) {\n      var m = new Float32Array(matrix);\n      m[4] /= 255;\n      m[9] /= 255;\n      m[14] /= 255;\n      m[19] /= 255;\n      return m;\n    }\n  }, {\n    key: \"brightness\",\n    value: function brightness(b, multiply) {\n      var matrix = [b, 0, 0, 0, 0, 0, b, 0, 0, 0, 0, 0, b, 0, 0, 0, 0, 0, 1, 0];\n      this._loadMatrix(matrix, multiply);\n    }\n  }, {\n    key: \"tint\",\n    value: function tint(color, multiply) {\n      var r = color >> 16 & 255;\n      var g = color >> 8 & 255;\n      var b = color & 255;\n      var matrix = [r / 255, 0, 0, 0, 0, 0, g / 255, 0, 0, 0, 0, 0, b / 255, 0, 0, 0, 0, 0, 1, 0];\n      this._loadMatrix(matrix, multiply);\n    }\n  }, {\n    key: \"greyscale\",\n    value: function greyscale(scale, multiply) {\n      var matrix = [scale, scale, scale, 0, 0, scale, scale, scale, 0, 0, scale, scale, scale, 0, 0, 0, 0, 0, 1, 0];\n      this._loadMatrix(matrix, multiply);\n    }\n  }, {\n    key: \"blackAndWhite\",\n    value: function blackAndWhite(multiply) {\n      var matrix = [0.3, 0.6, 0.1, 0, 0, 0.3, 0.6, 0.1, 0, 0, 0.3, 0.6, 0.1, 0, 0, 0, 0, 0, 1, 0];\n      this._loadMatrix(matrix, multiply);\n    }\n  }, {\n    key: \"hue\",\n    value: function hue(rotation, multiply) {\n      rotation = (rotation || 0) / 180 * Math.PI;\n      var cosR = Math.cos(rotation);\n      var sinR = Math.sin(rotation);\n      var sqrt = Math.sqrt;\n      var w = 1 / 3;\n      var sqrW = sqrt(w);\n      var a00 = cosR + (1 - cosR) * w;\n      var a01 = w * (1 - cosR) - sqrW * sinR;\n      var a02 = w * (1 - cosR) + sqrW * sinR;\n      var a10 = w * (1 - cosR) + sqrW * sinR;\n      var a11 = cosR + w * (1 - cosR);\n      var a12 = w * (1 - cosR) - sqrW * sinR;\n      var a20 = w * (1 - cosR) - sqrW * sinR;\n      var a21 = w * (1 - cosR) + sqrW * sinR;\n      var a22 = cosR + w * (1 - cosR);\n      var matrix = [a00, a01, a02, 0, 0, a10, a11, a12, 0, 0, a20, a21, a22, 0, 0, 0, 0, 0, 1, 0];\n      this._loadMatrix(matrix, multiply);\n    }\n  }, {\n    key: \"contrast\",\n    value: function contrast(amount, multiply) {\n      var v = (amount || 0) + 1;\n      var o = -0.5 * (v - 1);\n      var matrix = [v, 0, 0, 0, o, 0, v, 0, 0, o, 0, 0, v, 0, o, 0, 0, 0, 1, 0];\n      this._loadMatrix(matrix, multiply);\n    }\n  }, {\n    key: \"saturate\",\n    value: function saturate() {\n      var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var multiply = arguments.length > 1 ? arguments[1] : undefined;\n      var x = amount * 2 / 3 + 1;\n      var y = (x - 1) * -0.5;\n      var matrix = [x, y, y, 0, 0, y, x, y, 0, 0, y, y, x, 0, 0, 0, 0, 0, 1, 0];\n      this._loadMatrix(matrix, multiply);\n    }\n  }, {\n    key: \"desaturate\",\n    value: function desaturate() {\n      this.saturate(-1);\n    }\n  }, {\n    key: \"negative\",\n    value: function negative(multiply) {\n      var matrix = [-1, 0, 0, 1, 0, 0, -1, 0, 1, 0, 0, 0, -1, 1, 0, 0, 0, 0, 1, 0];\n      this._loadMatrix(matrix, multiply);\n    }\n  }, {\n    key: \"sepia\",\n    value: function sepia(multiply) {\n      var matrix = [0.393, 0.7689999, 0.18899999, 0, 0, 0.349, 0.6859999, 0.16799999, 0, 0, 0.272, 0.5339999, 0.13099999, 0, 0, 0, 0, 0, 1, 0];\n      this._loadMatrix(matrix, multiply);\n    }\n  }, {\n    key: \"technicolor\",\n    value: function technicolor(multiply) {\n      var matrix = [1.9125277891456083, -0.8545344976951645, -0.09155508482755585, 0, 11.793603434377337, -0.3087833385928097, 1.7658908555458428, -0.10601743074722245, 0, -70.35205161461398, -0.231103377548616, -0.7501899197440212, 1.847597816108189, 0, 30.950940869491138, 0, 0, 0, 1, 0];\n      this._loadMatrix(matrix, multiply);\n    }\n  }, {\n    key: \"polaroid\",\n    value: function polaroid(multiply) {\n      var matrix = [1.438, -0.062, -0.062, 0, 0, -0.122, 1.378, -0.122, 0, 0, -0.016, -0.016, 1.483, 0, 0, 0, 0, 0, 1, 0];\n      this._loadMatrix(matrix, multiply);\n    }\n  }, {\n    key: \"toBGR\",\n    value: function toBGR(multiply) {\n      var matrix = [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0];\n      this._loadMatrix(matrix, multiply);\n    }\n  }, {\n    key: \"kodachrome\",\n    value: function kodachrome(multiply) {\n      var matrix = [1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502, -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203, -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946, 0, 0, 0, 1, 0];\n      this._loadMatrix(matrix, multiply);\n    }\n  }, {\n    key: \"browni\",\n    value: function browni(multiply) {\n      var matrix = [0.5997023498159715, 0.34553243048391263, -0.2708298674538042, 0, 47.43192855600873, -0.037703249837783157, 0.8609577587992641, 0.15059552388459913, 0, -36.96841498319127, 0.24113635128153335, -0.07441037908422492, 0.44972182064877153, 0, -7.562075277591283, 0, 0, 0, 1, 0];\n      this._loadMatrix(matrix, multiply);\n    }\n  }, {\n    key: \"vintage\",\n    value: function vintage(multiply) {\n      var matrix = [0.6279345635605994, 0.3202183420819367, -0.03965408211312453, 0, 9.651285835294123, 0.02578397704808868, 0.6441188644374771, 0.03259127616149294, 0, 7.462829176470591, 0.0466055556782719, -0.0851232987247891, 0.5241648018700465, 0, 5.159190588235296, 0, 0, 0, 1, 0];\n      this._loadMatrix(matrix, multiply);\n    }\n  }, {\n    key: \"colorTone\",\n    value: function colorTone(desaturation, toned, lightColor, darkColor, multiply) {\n      desaturation = desaturation || 0.2;\n      toned = toned || 0.15;\n      lightColor = lightColor || 16770432;\n      darkColor = darkColor || 3375104;\n      var lR = (lightColor >> 16 & 255) / 255;\n      var lG = (lightColor >> 8 & 255) / 255;\n      var lB = (lightColor & 255) / 255;\n      var dR = (darkColor >> 16 & 255) / 255;\n      var dG = (darkColor >> 8 & 255) / 255;\n      var dB = (darkColor & 255) / 255;\n      var matrix = [0.3, 0.59, 0.11, 0, 0, lR, lG, lB, desaturation, 0, dR, dG, dB, toned, 0, lR - dR, lG - dG, lB - dB, 0, 0];\n      this._loadMatrix(matrix, multiply);\n    }\n  }, {\n    key: \"night\",\n    value: function night(intensity, multiply) {\n      intensity = intensity || 0.1;\n      var matrix = [intensity * -2, -intensity, 0, 0, 0, -intensity, 0, intensity, 0, 0, 0, intensity, intensity * 2, 0, 0, 0, 0, 0, 1, 0];\n      this._loadMatrix(matrix, multiply);\n    }\n  }, {\n    key: \"predator\",\n    value: function predator(amount, multiply) {\n      var matrix = [11.224130630493164 * amount, -4.794486999511719 * amount, -2.8746118545532227 * amount, 0 * amount, 0.40342438220977783 * amount, -3.6330697536468506 * amount, 9.193157196044922 * amount, -2.951810836791992 * amount, 0 * amount, -1.316135048866272 * amount, -3.2184197902679443 * amount, -4.2375030517578125 * amount, 7.476448059082031 * amount, 0 * amount, 0.8044459223747253 * amount, 0, 0, 0, 1, 0];\n      this._loadMatrix(matrix, multiply);\n    }\n  }, {\n    key: \"lsd\",\n    value: function lsd(multiply) {\n      var matrix = [2, -0.4, 0.5, 0, 0, -0.5, 2, -0.4, 0, 0, -0.4, -0.5, 3, 0, 0, 0, 0, 0, 1, 0];\n      this._loadMatrix(matrix, multiply);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var matrix = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];\n      this._loadMatrix(matrix, false);\n    }\n  }, {\n    key: \"matrix\",\n    get: function get() {\n      return this.uniforms.m;\n    },\n    set: function set(value) {\n      this.uniforms.m = value;\n    }\n  }, {\n    key: \"alpha\",\n    get: function get() {\n      return this.uniforms.uAlpha;\n    },\n    set: function set(value) {\n      this.uniforms.uAlpha = value;\n    }\n  }]);\n  return ColorMatrixFilter;\n}(core.Filter);\nColorMatrixFilter.prototype.grayscale = ColorMatrixFilter.prototype.greyscale;\nexports.ColorMatrixFilter = ColorMatrixFilter;","map":null,"metadata":{},"sourceType":"script"}