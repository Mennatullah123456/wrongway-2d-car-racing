{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar core = require('@pixi/core');\nvar ParticleBuffer = /*#__PURE__*/function () {\n  function ParticleBuffer(properties, dynamicPropertyFlags, size) {\n    _classCallCheck(this, ParticleBuffer);\n    this.geometry = new core.Geometry();\n    this.indexBuffer = null;\n    this.size = size;\n    this.dynamicProperties = [];\n    this.staticProperties = [];\n    for (var i = 0; i < properties.length; ++i) {\n      var property = properties[i];\n      property = {\n        attributeName: property.attributeName,\n        size: property.size,\n        uploadFunction: property.uploadFunction,\n        type: property.type || core.TYPES.FLOAT,\n        offset: property.offset\n      };\n      if (dynamicPropertyFlags[i]) {\n        this.dynamicProperties.push(property);\n      } else {\n        this.staticProperties.push(property);\n      }\n    }\n    this.staticStride = 0;\n    this.staticBuffer = null;\n    this.staticData = null;\n    this.staticDataUint32 = null;\n    this.dynamicStride = 0;\n    this.dynamicBuffer = null;\n    this.dynamicData = null;\n    this.dynamicDataUint32 = null;\n    this._updateID = 0;\n    this.initBuffers();\n  }\n  _createClass(ParticleBuffer, [{\n    key: \"initBuffers\",\n    value: function initBuffers() {\n      var geometry = this.geometry;\n      var dynamicOffset = 0;\n      this.indexBuffer = new core.Buffer(core.utils.createIndicesForQuads(this.size), true, true);\n      geometry.addIndex(this.indexBuffer);\n      this.dynamicStride = 0;\n      for (var i = 0; i < this.dynamicProperties.length; ++i) {\n        var property = this.dynamicProperties[i];\n        property.offset = dynamicOffset;\n        dynamicOffset += property.size;\n        this.dynamicStride += property.size;\n      }\n      var dynBuffer = new ArrayBuffer(this.size * this.dynamicStride * 4 * 4);\n      this.dynamicData = new Float32Array(dynBuffer);\n      this.dynamicDataUint32 = new Uint32Array(dynBuffer);\n      this.dynamicBuffer = new core.Buffer(this.dynamicData, false, false);\n      var staticOffset = 0;\n      this.staticStride = 0;\n      for (var _i = 0; _i < this.staticProperties.length; ++_i) {\n        var _property = this.staticProperties[_i];\n        _property.offset = staticOffset;\n        staticOffset += _property.size;\n        this.staticStride += _property.size;\n      }\n      var statBuffer = new ArrayBuffer(this.size * this.staticStride * 4 * 4);\n      this.staticData = new Float32Array(statBuffer);\n      this.staticDataUint32 = new Uint32Array(statBuffer);\n      this.staticBuffer = new core.Buffer(this.staticData, true, false);\n      for (var _i2 = 0; _i2 < this.dynamicProperties.length; ++_i2) {\n        var _property2 = this.dynamicProperties[_i2];\n        geometry.addAttribute(_property2.attributeName, this.dynamicBuffer, 0, _property2.type === core.TYPES.UNSIGNED_BYTE, _property2.type, this.dynamicStride * 4, _property2.offset * 4);\n      }\n      for (var _i3 = 0; _i3 < this.staticProperties.length; ++_i3) {\n        var _property3 = this.staticProperties[_i3];\n        geometry.addAttribute(_property3.attributeName, this.staticBuffer, 0, _property3.type === core.TYPES.UNSIGNED_BYTE, _property3.type, this.staticStride * 4, _property3.offset * 4);\n      }\n    }\n  }, {\n    key: \"uploadDynamic\",\n    value: function uploadDynamic(children, startIndex, amount) {\n      for (var i = 0; i < this.dynamicProperties.length; i++) {\n        var property = this.dynamicProperties[i];\n        property.uploadFunction(children, startIndex, amount, property.type === core.TYPES.UNSIGNED_BYTE ? this.dynamicDataUint32 : this.dynamicData, this.dynamicStride, property.offset);\n      }\n      this.dynamicBuffer._updateID++;\n    }\n  }, {\n    key: \"uploadStatic\",\n    value: function uploadStatic(children, startIndex, amount) {\n      for (var i = 0; i < this.staticProperties.length; i++) {\n        var property = this.staticProperties[i];\n        property.uploadFunction(children, startIndex, amount, property.type === core.TYPES.UNSIGNED_BYTE ? this.staticDataUint32 : this.staticData, this.staticStride, property.offset);\n      }\n      this.staticBuffer._updateID++;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.indexBuffer = null;\n      this.dynamicProperties = null;\n      this.dynamicBuffer = null;\n      this.dynamicData = null;\n      this.dynamicDataUint32 = null;\n      this.staticProperties = null;\n      this.staticBuffer = null;\n      this.staticData = null;\n      this.staticDataUint32 = null;\n      this.geometry.destroy();\n    }\n  }]);\n  return ParticleBuffer;\n}();\nexports.ParticleBuffer = ParticleBuffer;","map":null,"metadata":{},"sourceType":"script"}