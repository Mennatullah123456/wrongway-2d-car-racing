{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport { ExtensionType, extensions } from '@pixi/extensions';\nimport { Rectangle } from '@pixi/math';\nimport { settings } from '@pixi/settings';\nvar ViewSystem = /*#__PURE__*/function () {\n  function ViewSystem(renderer) {\n    _classCallCheck(this, ViewSystem);\n    this.renderer = renderer;\n  }\n  _createClass(ViewSystem, [{\n    key: \"init\",\n    value: function init(options) {\n      this.screen = new Rectangle(0, 0, options.width, options.height);\n      this.element = options.view || settings.ADAPTER.createCanvas();\n      this.resolution = options.resolution || settings.RESOLUTION;\n      this.autoDensity = !!options.autoDensity;\n    }\n  }, {\n    key: \"resizeView\",\n    value: function resizeView(desiredScreenWidth, desiredScreenHeight) {\n      this.element.width = Math.round(desiredScreenWidth * this.resolution);\n      this.element.height = Math.round(desiredScreenHeight * this.resolution);\n      var screenWidth = this.element.width / this.resolution;\n      var screenHeight = this.element.height / this.resolution;\n      this.screen.width = screenWidth;\n      this.screen.height = screenHeight;\n      if (this.autoDensity) {\n        this.element.style.width = \"\".concat(screenWidth, \"px\");\n        this.element.style.height = \"\".concat(screenHeight, \"px\");\n      }\n      this.renderer.emit(\"resize\", screenWidth, screenHeight);\n      this.renderer.runners.resize.emit(this.screen.width, this.screen.height);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(removeView) {\n      if (removeView) {\n        this.element.parentNode?.removeChild(this.element);\n      }\n      this.renderer = null;\n      this.element = null;\n      this.screen = null;\n    }\n  }]);\n  return ViewSystem;\n}();\nViewSystem.extension = {\n  type: [ExtensionType.RendererSystem, ExtensionType.CanvasRendererSystem],\n  name: \"_view\"\n};\nextensions.add(ViewSystem);\nexport { ViewSystem };","map":null,"metadata":{},"sourceType":"module"}