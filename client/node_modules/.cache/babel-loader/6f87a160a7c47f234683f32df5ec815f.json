{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\nvar _get = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nvar _assertThisInitialized = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/assertThisInitialized\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar BaseTexture = require('../textures/BaseTexture.js');\nvar Framebuffer = require('../framebuffer/Framebuffer.js');\nvar constants = require('@pixi/constants');\nvar BaseRenderTexture = /*#__PURE__*/function (_BaseTexture$BaseText) {\n  _inherits(BaseRenderTexture, _BaseTexture$BaseText);\n  function BaseRenderTexture() {\n    var _this;\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, BaseRenderTexture);\n    if (typeof options === \"number\") {\n      var width = arguments[0];\n      var height = arguments[1];\n      var scaleMode = arguments[2];\n      var resolution = arguments[3];\n      options = {\n        width: width,\n        height: height,\n        scaleMode: scaleMode,\n        resolution: resolution\n      };\n    }\n    options.width = options.width || 100;\n    options.height = options.height || 100;\n    options.multisample ?? (options.multisample = constants.MSAA_QUALITY.NONE);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BaseRenderTexture).call(this, null, options));\n    _this.mipmap = constants.MIPMAP_MODES.OFF;\n    _this.valid = true;\n    _this.clearColor = [0, 0, 0, 0];\n    _this.framebuffer = new Framebuffer.Framebuffer(_this.realWidth, _this.realHeight).addColorTexture(0, _assertThisInitialized(_assertThisInitialized(_this)));\n    _this.framebuffer.multisample = options.multisample;\n    _this.maskStack = [];\n    _this.filterStack = [{}];\n    return _this;\n  }\n  _createClass(BaseRenderTexture, [{\n    key: \"resize\",\n    value: function resize(desiredWidth, desiredHeight) {\n      this.framebuffer.resize(desiredWidth * this.resolution, desiredHeight * this.resolution);\n      this.setRealSize(this.framebuffer.width, this.framebuffer.height);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.framebuffer.dispose();\n      _get(_getPrototypeOf(BaseRenderTexture.prototype), \"dispose\", this).call(this);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(BaseRenderTexture.prototype), \"destroy\", this).call(this);\n      this.framebuffer.destroyDepthTexture();\n      this.framebuffer = null;\n    }\n  }]);\n  return BaseRenderTexture;\n}(BaseTexture.BaseTexture);\nexports.BaseRenderTexture = BaseRenderTexture;","map":null,"metadata":{},"sourceType":"script"}