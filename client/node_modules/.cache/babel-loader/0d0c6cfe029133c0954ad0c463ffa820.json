{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar core = require('@pixi/core');\nvar ResizePlugin = /*#__PURE__*/function () {\n  function ResizePlugin() {\n    _classCallCheck(this, ResizePlugin);\n  }\n  _createClass(ResizePlugin, null, [{\n    key: \"init\",\n    value: function init(options) {\n      var _this = this;\n      Object.defineProperty(this, \"resizeTo\", {\n        set: function set(dom) {\n          globalThis.removeEventListener(\"resize\", this.queueResize);\n          this._resizeTo = dom;\n          if (dom) {\n            globalThis.addEventListener(\"resize\", this.queueResize);\n            this.resize();\n          }\n        },\n        get: function get() {\n          return this._resizeTo;\n        }\n      });\n      this.queueResize = function () {\n        if (!_this._resizeTo) {\n          return;\n        }\n        _this.cancelResize();\n        _this._resizeId = requestAnimationFrame(function () {\n          return _this.resize();\n        });\n      };\n      this.cancelResize = function () {\n        if (_this._resizeId) {\n          cancelAnimationFrame(_this._resizeId);\n          _this._resizeId = null;\n        }\n      };\n      this.resize = function () {\n        if (!_this._resizeTo) {\n          return;\n        }\n        _this.cancelResize();\n        var width;\n        var height;\n        if (_this._resizeTo === globalThis.window) {\n          width = globalThis.innerWidth;\n          height = globalThis.innerHeight;\n        } else {\n          var _this$_resizeTo = _this._resizeTo,\n            clientWidth = _this$_resizeTo.clientWidth,\n            clientHeight = _this$_resizeTo.clientHeight;\n          width = clientWidth;\n          height = clientHeight;\n        }\n        _this.renderer.resize(width, height);\n        _this.render();\n      };\n      this._resizeId = null;\n      this._resizeTo = null;\n      this.resizeTo = options.resizeTo || null;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      globalThis.removeEventListener(\"resize\", this.queueResize);\n      this.cancelResize();\n      this.cancelResize = null;\n      this.queueResize = null;\n      this.resizeTo = null;\n      this.resize = null;\n    }\n  }]);\n  return ResizePlugin;\n}();\nResizePlugin.extension = core.ExtensionType.Application;\ncore.extensions.add(ResizePlugin);\nexports.ResizePlugin = ResizePlugin;","map":null,"metadata":{},"sourceType":"script"}