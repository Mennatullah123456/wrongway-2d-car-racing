{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\nvar _get = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar core = require('@pixi/core');\nvar display = require('@pixi/display');\nvar ParticleContainer = /*#__PURE__*/function (_display$Container) {\n  _inherits(ParticleContainer, _display$Container);\n  function ParticleContainer() {\n    var _this;\n    var maxSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1500;\n    var properties = arguments.length > 1 ? arguments[1] : undefined;\n    var batchSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 16384;\n    var autoResize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    _classCallCheck(this, ParticleContainer);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ParticleContainer).call(this));\n    var maxBatchSize = 16384;\n    if (batchSize > maxBatchSize) {\n      batchSize = maxBatchSize;\n    }\n    _this._properties = [false, true, false, false, false];\n    _this._maxSize = maxSize;\n    _this._batchSize = batchSize;\n    _this._buffers = null;\n    _this._bufferUpdateIDs = [];\n    _this._updateID = 0;\n    _this.interactiveChildren = false;\n    _this.blendMode = core.BLEND_MODES.NORMAL;\n    _this.autoResize = autoResize;\n    _this.roundPixels = true;\n    _this.baseTexture = null;\n    _this.setProperties(properties);\n    _this._tint = 0;\n    _this.tintRgb = new Float32Array(4);\n    _this.tint = 16777215;\n    return _this;\n  }\n  _createClass(ParticleContainer, [{\n    key: \"setProperties\",\n    value: function setProperties(properties) {\n      if (properties) {\n        this._properties[0] = \"vertices\" in properties || \"scale\" in properties ? !!properties.vertices || !!properties.scale : this._properties[0];\n        this._properties[1] = \"position\" in properties ? !!properties.position : this._properties[1];\n        this._properties[2] = \"rotation\" in properties ? !!properties.rotation : this._properties[2];\n        this._properties[3] = \"uvs\" in properties ? !!properties.uvs : this._properties[3];\n        this._properties[4] = \"tint\" in properties || \"alpha\" in properties ? !!properties.tint || !!properties.alpha : this._properties[4];\n      }\n    }\n  }, {\n    key: \"updateTransform\",\n    value: function updateTransform() {\n      this.displayObjectUpdateTransform();\n    }\n  }, {\n    key: \"render\",\n    value: function render(renderer) {\n      var _this2 = this;\n      if (!this.visible || this.worldAlpha <= 0 || !this.children.length || !this.renderable) {\n        return;\n      }\n      if (!this.baseTexture) {\n        this.baseTexture = this.children[0]._texture.baseTexture;\n        if (!this.baseTexture.valid) {\n          this.baseTexture.once(\"update\", function () {\n            return _this2.onChildrenChange(0);\n          });\n        }\n      }\n      renderer.batch.setObjectRenderer(renderer.plugins.particle);\n      renderer.plugins.particle.render(this);\n    }\n  }, {\n    key: \"onChildrenChange\",\n    value: function onChildrenChange(smallestChildIndex) {\n      var bufferIndex = Math.floor(smallestChildIndex / this._batchSize);\n      while (this._bufferUpdateIDs.length < bufferIndex) {\n        this._bufferUpdateIDs.push(0);\n      }\n      this._bufferUpdateIDs[bufferIndex] = ++this._updateID;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this._buffers) {\n        for (var i = 0; i < this._buffers.length; ++i) {\n          this._buffers[i].destroy();\n        }\n        this._buffers = null;\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(options) {\n      _get(_getPrototypeOf(ParticleContainer.prototype), \"destroy\", this).call(this, options);\n      this.dispose();\n      this._properties = null;\n      this._buffers = null;\n      this._bufferUpdateIDs = null;\n    }\n  }, {\n    key: \"tint\",\n    get: function get() {\n      return this._tint;\n    },\n    set: function set(value) {\n      this._tint = value;\n      core.utils.hex2rgb(value, this.tintRgb);\n    }\n  }]);\n  return ParticleContainer;\n}(display.Container);\nexports.ParticleContainer = ParticleContainer;","map":null,"metadata":{},"sourceType":"script"}