{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar BitmapFontData = require('../BitmapFontData.js');\nvar TextFormat = /*#__PURE__*/function () {\n  function TextFormat() {\n    _classCallCheck(this, TextFormat);\n  }\n  _createClass(TextFormat, null, [{\n    key: \"test\",\n    value: function test(data) {\n      return typeof data === \"string\" && data.startsWith(\"info face=\");\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(txt) {\n      var items = txt.match(/^[a-z]+\\s+.+$/gm);\n      var rawData = {\n        info: [],\n        common: [],\n        page: [],\n        char: [],\n        chars: [],\n        kerning: [],\n        kernings: [],\n        distanceField: []\n      };\n      for (var i in items) {\n        var name = items[i].match(/^[a-z]+/gm)[0];\n        var attributeList = items[i].match(/[a-zA-Z]+=([^\\s\"']+|\"([^\"]*)\")/gm);\n        var itemData = {};\n        for (var i2 in attributeList) {\n          var split = attributeList[i2].split(\"=\");\n          var key = split[0];\n          var strValue = split[1].replace(/\"/gm, \"\");\n          var floatValue = parseFloat(strValue);\n          var value = isNaN(floatValue) ? strValue : floatValue;\n          itemData[key] = value;\n        }\n        rawData[name].push(itemData);\n      }\n      var font = new BitmapFontData.BitmapFontData();\n      rawData.info.forEach(function (info) {\n        return font.info.push({\n          face: info.face,\n          size: parseInt(info.size, 10)\n        });\n      });\n      rawData.common.forEach(function (common) {\n        return font.common.push({\n          lineHeight: parseInt(common.lineHeight, 10)\n        });\n      });\n      rawData.page.forEach(function (page) {\n        return font.page.push({\n          id: parseInt(page.id, 10),\n          file: page.file\n        });\n      });\n      rawData.char.forEach(function (char) {\n        return font.char.push({\n          id: parseInt(char.id, 10),\n          page: parseInt(char.page, 10),\n          x: parseInt(char.x, 10),\n          y: parseInt(char.y, 10),\n          width: parseInt(char.width, 10),\n          height: parseInt(char.height, 10),\n          xoffset: parseInt(char.xoffset, 10),\n          yoffset: parseInt(char.yoffset, 10),\n          xadvance: parseInt(char.xadvance, 10)\n        });\n      });\n      rawData.kerning.forEach(function (kerning) {\n        return font.kerning.push({\n          first: parseInt(kerning.first, 10),\n          second: parseInt(kerning.second, 10),\n          amount: parseInt(kerning.amount, 10)\n        });\n      });\n      rawData.distanceField.forEach(function (df) {\n        return font.distanceField.push({\n          distanceRange: parseInt(df.distanceRange, 10),\n          fieldType: df.fieldType\n        });\n      });\n      return font;\n    }\n  }]);\n  return TextFormat;\n}();\nexports.TextFormat = TextFormat;","map":null,"metadata":{},"sourceType":"script"}