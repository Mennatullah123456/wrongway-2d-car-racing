{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar Rectangle = require('./Rectangle.js');\nvar _const = require('../const.js');\nvar Ellipse = /*#__PURE__*/function () {\n  function Ellipse() {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var halfWidth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var halfHeight = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    _classCallCheck(this, Ellipse);\n    this.x = x;\n    this.y = y;\n    this.width = halfWidth;\n    this.height = halfHeight;\n    this.type = _const.SHAPES.ELIP;\n  }\n  _createClass(Ellipse, [{\n    key: \"clone\",\n    value: function clone() {\n      return new Ellipse(this.x, this.y, this.width, this.height);\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(x, y) {\n      if (this.width <= 0 || this.height <= 0) {\n        return false;\n      }\n      var normx = (x - this.x) / this.width;\n      var normy = (y - this.y) / this.height;\n      normx *= normx;\n      normy *= normy;\n      return normx + normy <= 1;\n    }\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      return new Rectangle.Rectangle(this.x - this.width, this.y - this.height, this.width, this.height);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"[@pixi/math:Ellipse x=\".concat(this.x, \" y=\").concat(this.y, \" width=\").concat(this.width, \" height=\").concat(this.height, \"]\");\n    }\n  }]);\n  return Ellipse;\n}();\nexports.Ellipse = Ellipse;","map":null,"metadata":{},"sourceType":"script"}