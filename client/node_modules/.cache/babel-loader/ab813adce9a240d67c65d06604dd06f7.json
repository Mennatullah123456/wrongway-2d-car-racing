{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar core = require('@pixi/core');\nvar resolveCompressedTextureUrl = {\n  extension: core.ExtensionType.ResolveParser,\n  test: function test(value) {\n    var temp = value.split(\"?\")[0];\n    var extension = temp.split(\".\").pop();\n    return [\"basis\", \"ktx\", \"dds\"].includes(extension);\n  },\n  parse: function parse(value) {\n    var temp = value.split(\"?\")[0];\n    var extension = temp.split(\".\").pop();\n    if (extension === \"ktx\") {\n      var extensions2 = [\".s3tc.ktx\", \".s3tc_sRGB.ktx\", \".etc.ktx\", \".etc1.ktx\", \".pvrt.ktx\", \".atc.ktx\", \".astc.ktx\"];\n      if (extensions2.some(function (ext) {\n        return value.endsWith(ext);\n      })) {\n        return {\n          resolution: parseFloat(core.settings.RETINA_PREFIX.exec(value)?.[1] ?? \"1\"),\n          format: extensions2.find(function (ext) {\n            return value.endsWith(ext);\n          }),\n          src: value\n        };\n      }\n    }\n    return {\n      resolution: parseFloat(core.settings.RETINA_PREFIX.exec(value)?.[1] ?? \"1\"),\n      format: value.split(\".\").pop(),\n      src: value\n    };\n  }\n};\ncore.extensions.add(resolveCompressedTextureUrl);\nexports.resolveCompressedTextureUrl = resolveCompressedTextureUrl;","map":null,"metadata":{},"sourceType":"script"}