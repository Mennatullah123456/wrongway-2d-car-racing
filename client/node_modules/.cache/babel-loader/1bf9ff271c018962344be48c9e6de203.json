{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar _const = require('../const.js');\nvar Rectangle = require('./Rectangle.js');\nvar Circle = /*#__PURE__*/function () {\n  function Circle() {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var radius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    _classCallCheck(this, Circle);\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.type = _const.SHAPES.CIRC;\n  }\n  _createClass(Circle, [{\n    key: \"clone\",\n    value: function clone() {\n      return new Circle(this.x, this.y, this.radius);\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(x, y) {\n      if (this.radius <= 0) {\n        return false;\n      }\n      var r2 = this.radius * this.radius;\n      var dx = this.x - x;\n      var dy = this.y - y;\n      dx *= dx;\n      dy *= dy;\n      return dx + dy <= r2;\n    }\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      return new Rectangle.Rectangle(this.x - this.radius, this.y - this.radius, this.radius * 2, this.radius * 2);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"[@pixi/math:Circle x=\".concat(this.x, \" y=\").concat(this.y, \" radius=\").concat(this.radius, \"]\");\n    }\n  }]);\n  return Circle;\n}();\nexports.Circle = Circle;","map":null,"metadata":{},"sourceType":"script"}