{"ast":null,"code":"import { utils } from '@pixi/core';\nfunction fixOrientation(points) {\n  var hole = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var m = points.length;\n  if (m < 6) {\n    return;\n  }\n  var area = 0;\n  for (var i = 0, x1 = points[m - 2], y1 = points[m - 1]; i < m; i += 2) {\n    var x2 = points[i];\n    var y2 = points[i + 1];\n    area += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  if (!hole && area > 0 || hole && area <= 0) {\n    var n = m / 2;\n    for (var _i = n + n % 2; _i < m; _i += 2) {\n      var i1 = m - _i - 2;\n      var i2 = m - _i - 1;\n      var i3 = _i;\n      var i4 = _i + 1;\n      var _ref = [points[i3], points[i1]];\n      points[i1] = _ref[0];\n      points[i3] = _ref[1];\n      var _ref2 = [points[i4], points[i2]];\n      points[i2] = _ref2[0];\n      points[i4] = _ref2[1];\n    }\n  }\n}\nvar buildPoly = {\n  build: function build(graphicsData) {\n    graphicsData.points = graphicsData.shape.points.slice();\n  },\n  triangulate: function triangulate(graphicsData, graphicsGeometry) {\n    var points = graphicsData.points;\n    var holes = graphicsData.holes;\n    var verts = graphicsGeometry.points;\n    var indices = graphicsGeometry.indices;\n    if (points.length >= 6) {\n      fixOrientation(points, false);\n      var holeArray = [];\n      for (var i = 0; i < holes.length; i++) {\n        var hole = holes[i];\n        fixOrientation(hole.points, true);\n        holeArray.push(points.length / 2);\n        points = points.concat(hole.points);\n      }\n      var triangles = utils.earcut(points, holeArray, 2);\n      if (!triangles) {\n        return;\n      }\n      var vertPos = verts.length / 2;\n      for (var _i2 = 0; _i2 < triangles.length; _i2 += 3) {\n        indices.push(triangles[_i2] + vertPos);\n        indices.push(triangles[_i2 + 1] + vertPos);\n        indices.push(triangles[_i2 + 2] + vertPos);\n      }\n      for (var _i3 = 0; _i3 < points.length; _i3++) {\n        verts.push(points[_i3]);\n      }\n    }\n  }\n};\nexport { buildPoly };","map":null,"metadata":{},"sourceType":"module"}