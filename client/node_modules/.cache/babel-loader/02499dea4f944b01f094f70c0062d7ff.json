{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport { ObjectRenderer } from './ObjectRenderer.mjs';\nimport { ExtensionType, extensions } from '@pixi/extensions';\nvar BatchSystem = /*#__PURE__*/function () {\n  function BatchSystem(renderer) {\n    _classCallCheck(this, BatchSystem);\n    this.renderer = renderer;\n    this.emptyRenderer = new ObjectRenderer(renderer);\n    this.currentRenderer = this.emptyRenderer;\n  }\n  _createClass(BatchSystem, [{\n    key: \"setObjectRenderer\",\n    value: function setObjectRenderer(objectRenderer) {\n      if (this.currentRenderer === objectRenderer) {\n        return;\n      }\n      this.currentRenderer.stop();\n      this.currentRenderer = objectRenderer;\n      this.currentRenderer.start();\n    }\n  }, {\n    key: \"flush\",\n    value: function flush() {\n      this.setObjectRenderer(this.emptyRenderer);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.setObjectRenderer(this.emptyRenderer);\n    }\n  }, {\n    key: \"copyBoundTextures\",\n    value: function copyBoundTextures(arr, maxTextures) {\n      var boundTextures = this.renderer.texture.boundTextures;\n      for (var i = maxTextures - 1; i >= 0; --i) {\n        arr[i] = boundTextures[i] || null;\n        if (arr[i]) {\n          arr[i]._batchLocation = i;\n        }\n      }\n    }\n  }, {\n    key: \"boundArray\",\n    value: function boundArray(texArray, boundTextures, batchId, maxTextures) {\n      var elements = texArray.elements,\n        ids = texArray.ids,\n        count = texArray.count;\n      var j = 0;\n      for (var i = 0; i < count; i++) {\n        var tex = elements[i];\n        var loc = tex._batchLocation;\n        if (loc >= 0 && loc < maxTextures && boundTextures[loc] === tex) {\n          ids[i] = loc;\n          continue;\n        }\n        while (j < maxTextures) {\n          var bound = boundTextures[j];\n          if (bound && bound._batchEnabled === batchId && bound._batchLocation === j) {\n            j++;\n            continue;\n          }\n          ids[i] = j;\n          tex._batchLocation = j;\n          boundTextures[j] = tex;\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.renderer = null;\n    }\n  }]);\n  return BatchSystem;\n}();\nBatchSystem.extension = {\n  type: ExtensionType.RendererSystem,\n  name: \"batch\"\n};\nextensions.add(BatchSystem);\nexport { BatchSystem };","map":null,"metadata":{},"sourceType":"module"}