{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport cssColorNames from './../external/css-color-names/css-color-names.mjs';\nfunction hex2rgb(hex) {\n  var out = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  out[0] = (hex >> 16 & 255) / 255;\n  out[1] = (hex >> 8 & 255) / 255;\n  out[2] = (hex & 255) / 255;\n  return out;\n}\nfunction hex2string(hex) {\n  var hexString = hex.toString(16);\n  hexString = \"000000\".substring(0, 6 - hexString.length) + hexString;\n  return \"#\".concat(hexString);\n}\nfunction string2hex(string) {\n  if (typeof string === \"string\") {\n    string = cssColorNames[string.toLowerCase()] || string;\n    if (string[0] === \"#\") {\n      string = string.slice(1);\n    }\n    if (string.length === 3) {\n      var _string = string,\n        _string2 = _slicedToArray(_string, 3),\n        r = _string2[0],\n        g = _string2[1],\n        b = _string2[2];\n      string = r + r + g + g + b + b;\n    }\n  }\n  return parseInt(string, 16);\n}\nfunction rgb2hex(rgb) {\n  return (rgb[0] * 255 << 16) + (rgb[1] * 255 << 8) + (rgb[2] * 255 | 0);\n}\nexport { hex2rgb, hex2string, rgb2hex, string2hex };","map":null,"metadata":{},"sourceType":"module"}