{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport './utils/index.mjs';\nimport { ProgramCache } from '@pixi/utils';\nimport defaultFragment from './defaultProgram.mjs';\nimport defaultVertex from './defaultProgram2.mjs';\nimport { settings } from '@pixi/settings';\nimport { PRECISION } from '@pixi/constants';\nimport { setPrecision } from './utils/setPrecision.mjs';\nimport { getMaxFragmentPrecision } from './utils/getMaxFragmentPrecision.mjs';\nvar UID = 0;\nvar nameCache = {};\nvar Program = /*#__PURE__*/function () {\n  function Program(vertexSrc, fragmentSrc) {\n    var name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"pixi-shader\";\n    var extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    _classCallCheck(this, Program);\n    this.extra = {};\n    this.id = UID++;\n    this.vertexSrc = vertexSrc || Program.defaultVertexSrc;\n    this.fragmentSrc = fragmentSrc || Program.defaultFragmentSrc;\n    this.vertexSrc = this.vertexSrc.trim();\n    this.fragmentSrc = this.fragmentSrc.trim();\n    this.extra = extra;\n    if (this.vertexSrc.substring(0, 8) !== \"#version\") {\n      name = name.replace(/\\s+/g, \"-\");\n      if (nameCache[name]) {\n        nameCache[name]++;\n        name += \"-\".concat(nameCache[name]);\n      } else {\n        nameCache[name] = 1;\n      }\n      this.vertexSrc = \"#define SHADER_NAME \".concat(name, \"\\n\").concat(this.vertexSrc);\n      this.fragmentSrc = \"#define SHADER_NAME \".concat(name, \"\\n\").concat(this.fragmentSrc);\n      this.vertexSrc = setPrecision(this.vertexSrc, settings.PRECISION_VERTEX, PRECISION.HIGH);\n      this.fragmentSrc = setPrecision(this.fragmentSrc, settings.PRECISION_FRAGMENT, getMaxFragmentPrecision());\n    }\n    this.glPrograms = {};\n    this.syncUniforms = null;\n  }\n  _createClass(Program, null, [{\n    key: \"from\",\n    value: function from(vertexSrc, fragmentSrc, name) {\n      var key = vertexSrc + fragmentSrc;\n      var program = ProgramCache[key];\n      if (!program) {\n        ProgramCache[key] = program = new Program(vertexSrc, fragmentSrc, name);\n      }\n      return program;\n    }\n  }, {\n    key: \"defaultVertexSrc\",\n    get: function get() {\n      return defaultVertex;\n    }\n  }, {\n    key: \"defaultFragmentSrc\",\n    get: function get() {\n      return defaultFragment;\n    }\n  }]);\n  return Program;\n}();\nexport { Program };","map":null,"metadata":{},"sourceType":"module"}