{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar core = require('@pixi/core');\nvar BlurFilterPass = require('./BlurFilterPass.js');\nvar BlurFilter = /*#__PURE__*/function (_core$Filter) {\n  _inherits(BlurFilter, _core$Filter);\n  function BlurFilter() {\n    var _this;\n    var strength = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;\n    var quality = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;\n    var resolution = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : core.settings.FILTER_RESOLUTION;\n    var kernelSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n    _classCallCheck(this, BlurFilter);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BlurFilter).call(this));\n    _this.blurXFilter = new BlurFilterPass.BlurFilterPass(true, strength, quality, resolution, kernelSize);\n    _this.blurYFilter = new BlurFilterPass.BlurFilterPass(false, strength, quality, resolution, kernelSize);\n    _this.resolution = resolution;\n    _this.quality = quality;\n    _this.blur = strength;\n    _this.repeatEdgePixels = false;\n    return _this;\n  }\n  _createClass(BlurFilter, [{\n    key: \"apply\",\n    value: function apply(filterManager, input, output, clearMode) {\n      var xStrength = Math.abs(this.blurXFilter.strength);\n      var yStrength = Math.abs(this.blurYFilter.strength);\n      if (xStrength && yStrength) {\n        var renderTarget = filterManager.getFilterTexture();\n        this.blurXFilter.apply(filterManager, input, renderTarget, core.CLEAR_MODES.CLEAR);\n        this.blurYFilter.apply(filterManager, renderTarget, output, clearMode);\n        filterManager.returnFilterTexture(renderTarget);\n      } else if (yStrength) {\n        this.blurYFilter.apply(filterManager, input, output, clearMode);\n      } else {\n        this.blurXFilter.apply(filterManager, input, output, clearMode);\n      }\n    }\n  }, {\n    key: \"updatePadding\",\n    value: function updatePadding() {\n      if (this._repeatEdgePixels) {\n        this.padding = 0;\n      } else {\n        this.padding = Math.max(Math.abs(this.blurXFilter.strength), Math.abs(this.blurYFilter.strength)) * 2;\n      }\n    }\n  }, {\n    key: \"blur\",\n    get: function get() {\n      return this.blurXFilter.blur;\n    },\n    set: function set(value) {\n      this.blurXFilter.blur = this.blurYFilter.blur = value;\n      this.updatePadding();\n    }\n  }, {\n    key: \"quality\",\n    get: function get() {\n      return this.blurXFilter.quality;\n    },\n    set: function set(value) {\n      this.blurXFilter.quality = this.blurYFilter.quality = value;\n    }\n  }, {\n    key: \"blurX\",\n    get: function get() {\n      return this.blurXFilter.blur;\n    },\n    set: function set(value) {\n      this.blurXFilter.blur = value;\n      this.updatePadding();\n    }\n  }, {\n    key: \"blurY\",\n    get: function get() {\n      return this.blurYFilter.blur;\n    },\n    set: function set(value) {\n      this.blurYFilter.blur = value;\n      this.updatePadding();\n    }\n  }, {\n    key: \"blendMode\",\n    get: function get() {\n      return this.blurYFilter.blendMode;\n    },\n    set: function set(value) {\n      this.blurYFilter.blendMode = value;\n    }\n  }, {\n    key: \"repeatEdgePixels\",\n    get: function get() {\n      return this._repeatEdgePixels;\n    },\n    set: function set(value) {\n      this._repeatEdgePixels = value;\n      this.updatePadding();\n    }\n  }]);\n  return BlurFilter;\n}(core.Filter);\nexports.BlurFilter = BlurFilter;","map":null,"metadata":{},"sourceType":"script"}