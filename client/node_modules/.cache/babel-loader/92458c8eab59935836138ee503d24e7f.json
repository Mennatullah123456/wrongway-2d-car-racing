{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\nvar _get = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar mesh = require('@pixi/mesh');\nvar core = require('@pixi/core');\nvar RopeGeometry = require('./geometry/RopeGeometry.js');\nvar SimpleRope = /*#__PURE__*/function (_mesh$Mesh) {\n  _inherits(SimpleRope, _mesh$Mesh);\n  function SimpleRope(texture, points) {\n    var _this;\n    var textureScale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    _classCallCheck(this, SimpleRope);\n    var ropeGeometry = new RopeGeometry.RopeGeometry(texture.height, points, textureScale);\n    var meshMaterial = new mesh.MeshMaterial(texture);\n    if (textureScale > 0) {\n      texture.baseTexture.wrapMode = core.WRAP_MODES.REPEAT;\n    }\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SimpleRope).call(this, ropeGeometry, meshMaterial));\n    _this.autoUpdate = true;\n    return _this;\n  }\n  _createClass(SimpleRope, [{\n    key: \"_render\",\n    value: function _render(renderer) {\n      var geometry = this.geometry;\n      if (this.autoUpdate || geometry._width !== this.shader.texture.height) {\n        geometry._width = this.shader.texture.height;\n        geometry.update();\n      }\n      _get(_getPrototypeOf(SimpleRope.prototype), \"_render\", this).call(this, renderer);\n    }\n  }]);\n  return SimpleRope;\n}(mesh.Mesh);\nexports.SimpleRope = SimpleRope;","map":null,"metadata":{},"sourceType":"script"}