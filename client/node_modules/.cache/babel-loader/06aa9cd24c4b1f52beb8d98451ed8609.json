{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar _const = require('../const.js');\nvar RoundedRectangle = /*#__PURE__*/function () {\n  function RoundedRectangle() {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var width = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var height = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    var radius = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 20;\n    _classCallCheck(this, RoundedRectangle);\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.radius = radius;\n    this.type = _const.SHAPES.RREC;\n  }\n  _createClass(RoundedRectangle, [{\n    key: \"clone\",\n    value: function clone() {\n      return new RoundedRectangle(this.x, this.y, this.width, this.height, this.radius);\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(x, y) {\n      if (this.width <= 0 || this.height <= 0) {\n        return false;\n      }\n      if (x >= this.x && x <= this.x + this.width) {\n        if (y >= this.y && y <= this.y + this.height) {\n          var radius = Math.max(0, Math.min(this.radius, Math.min(this.width, this.height) / 2));\n          if (y >= this.y + radius && y <= this.y + this.height - radius || x >= this.x + radius && x <= this.x + this.width - radius) {\n            return true;\n          }\n          var dx = x - (this.x + radius);\n          var dy = y - (this.y + radius);\n          var radius2 = radius * radius;\n          if (dx * dx + dy * dy <= radius2) {\n            return true;\n          }\n          dx = x - (this.x + this.width - radius);\n          if (dx * dx + dy * dy <= radius2) {\n            return true;\n          }\n          dy = y - (this.y + this.height - radius);\n          if (dx * dx + dy * dy <= radius2) {\n            return true;\n          }\n          dx = x - (this.x + radius);\n          if (dx * dx + dy * dy <= radius2) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"[@pixi/math:RoundedRectangle x=\".concat(this.x, \" y=\").concat(this.y, \"width=\").concat(this.width, \" height=\").concat(this.height, \" radius=\").concat(this.radius, \"]\");\n    }\n  }]);\n  return RoundedRectangle;\n}();\nexports.RoundedRectangle = RoundedRectangle;","map":null,"metadata":{},"sourceType":"script"}