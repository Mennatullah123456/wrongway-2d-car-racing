{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\nvar _get = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar mesh = require('@pixi/mesh');\nvar core = require('@pixi/core');\nvar SimpleMesh = /*#__PURE__*/function (_mesh$Mesh) {\n  _inherits(SimpleMesh, _mesh$Mesh);\n  function SimpleMesh() {\n    var _this;\n    var texture = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : core.Texture.EMPTY;\n    var vertices = arguments.length > 1 ? arguments[1] : undefined;\n    var uvs = arguments.length > 2 ? arguments[2] : undefined;\n    var indices = arguments.length > 3 ? arguments[3] : undefined;\n    var drawMode = arguments.length > 4 ? arguments[4] : undefined;\n    _classCallCheck(this, SimpleMesh);\n    var geometry = new mesh.MeshGeometry(vertices, uvs, indices);\n    geometry.getBuffer(\"aVertexPosition\").static = false;\n    var meshMaterial = new mesh.MeshMaterial(texture);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SimpleMesh).call(this, geometry, meshMaterial, null, drawMode));\n    _this.autoUpdate = true;\n    return _this;\n  }\n  _createClass(SimpleMesh, [{\n    key: \"_render\",\n    value: function _render(renderer) {\n      if (this.autoUpdate) {\n        this.geometry.getBuffer(\"aVertexPosition\").update();\n      }\n      _get(_getPrototypeOf(SimpleMesh.prototype), \"_render\", this).call(this, renderer);\n    }\n  }, {\n    key: \"vertices\",\n    get: function get() {\n      return this.geometry.getBuffer(\"aVertexPosition\").data;\n    },\n    set: function set(value) {\n      this.geometry.getBuffer(\"aVertexPosition\").data = value;\n    }\n  }]);\n  return SimpleMesh;\n}(mesh.Mesh);\nexports.SimpleMesh = SimpleMesh;","map":null,"metadata":{},"sourceType":"script"}