{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport { SHAPES } from '../const.mjs';\nvar Polygon = /*#__PURE__*/function () {\n  function Polygon() {\n    _classCallCheck(this, Polygon);\n    for (var _len = arguments.length, points = new Array(_len), _key = 0; _key < _len; _key++) {\n      points[_key] = arguments[_key];\n    }\n    var flat = Array.isArray(points[0]) ? points[0] : points;\n    if (typeof flat[0] !== \"number\") {\n      var p = [];\n      for (var i = 0, il = flat.length; i < il; i++) {\n        p.push(flat[i].x, flat[i].y);\n      }\n      flat = p;\n    }\n    this.points = flat;\n    this.type = SHAPES.POLY;\n    this.closeStroke = true;\n  }\n  _createClass(Polygon, [{\n    key: \"clone\",\n    value: function clone() {\n      var points = this.points.slice();\n      var polygon = new Polygon(points);\n      polygon.closeStroke = this.closeStroke;\n      return polygon;\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(x, y) {\n      var inside = false;\n      var length = this.points.length / 2;\n      for (var i = 0, j = length - 1; i < length; j = i++) {\n        var xi = this.points[i * 2];\n        var yi = this.points[i * 2 + 1];\n        var xj = this.points[j * 2];\n        var yj = this.points[j * 2 + 1];\n        var intersect = yi > y !== yj > y && x < (xj - xi) * ((y - yi) / (yj - yi)) + xi;\n        if (intersect) {\n          inside = !inside;\n        }\n      }\n      return inside;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"[@pixi/math:PolygoncloseStroke=\".concat(this.closeStroke, \"points=\").concat(this.points.reduce(function (pointsDesc, currentPoint) {\n        return \"\".concat(pointsDesc, \", \").concat(currentPoint);\n      }, \"\"), \"]\");\n    }\n  }]);\n  return Polygon;\n}();\nexport { Polygon };","map":null,"metadata":{},"sourceType":"module"}