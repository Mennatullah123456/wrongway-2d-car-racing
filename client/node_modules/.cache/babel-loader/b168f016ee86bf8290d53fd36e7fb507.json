{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar BitmapFontData = require('../BitmapFontData.js');\nvar XMLFormat = /*#__PURE__*/function () {\n  function XMLFormat() {\n    _classCallCheck(this, XMLFormat);\n  }\n  _createClass(XMLFormat, null, [{\n    key: \"test\",\n    value: function test(data) {\n      var xml = data;\n      return \"getElementsByTagName\" in xml && xml.getElementsByTagName(\"page\").length && xml.getElementsByTagName(\"info\")[0].getAttribute(\"face\") !== null;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(xml) {\n      var data = new BitmapFontData.BitmapFontData();\n      var info = xml.getElementsByTagName(\"info\");\n      var common = xml.getElementsByTagName(\"common\");\n      var page = xml.getElementsByTagName(\"page\");\n      var char = xml.getElementsByTagName(\"char\");\n      var kerning = xml.getElementsByTagName(\"kerning\");\n      var distanceField = xml.getElementsByTagName(\"distanceField\");\n      for (var i = 0; i < info.length; i++) {\n        data.info.push({\n          face: info[i].getAttribute(\"face\"),\n          size: parseInt(info[i].getAttribute(\"size\"), 10)\n        });\n      }\n      for (var _i = 0; _i < common.length; _i++) {\n        data.common.push({\n          lineHeight: parseInt(common[_i].getAttribute(\"lineHeight\"), 10)\n        });\n      }\n      for (var _i2 = 0; _i2 < page.length; _i2++) {\n        data.page.push({\n          id: parseInt(page[_i2].getAttribute(\"id\"), 10) || 0,\n          file: page[_i2].getAttribute(\"file\")\n        });\n      }\n      for (var _i3 = 0; _i3 < char.length; _i3++) {\n        var letter = char[_i3];\n        data.char.push({\n          id: parseInt(letter.getAttribute(\"id\"), 10),\n          page: parseInt(letter.getAttribute(\"page\"), 10) || 0,\n          x: parseInt(letter.getAttribute(\"x\"), 10),\n          y: parseInt(letter.getAttribute(\"y\"), 10),\n          width: parseInt(letter.getAttribute(\"width\"), 10),\n          height: parseInt(letter.getAttribute(\"height\"), 10),\n          xoffset: parseInt(letter.getAttribute(\"xoffset\"), 10),\n          yoffset: parseInt(letter.getAttribute(\"yoffset\"), 10),\n          xadvance: parseInt(letter.getAttribute(\"xadvance\"), 10)\n        });\n      }\n      for (var _i4 = 0; _i4 < kerning.length; _i4++) {\n        data.kerning.push({\n          first: parseInt(kerning[_i4].getAttribute(\"first\"), 10),\n          second: parseInt(kerning[_i4].getAttribute(\"second\"), 10),\n          amount: parseInt(kerning[_i4].getAttribute(\"amount\"), 10)\n        });\n      }\n      for (var _i5 = 0; _i5 < distanceField.length; _i5++) {\n        data.distanceField.push({\n          fieldType: distanceField[_i5].getAttribute(\"fieldType\"),\n          distanceRange: parseInt(distanceField[_i5].getAttribute(\"distanceRange\"), 10)\n        });\n      }\n      return data;\n    }\n  }]);\n  return XMLFormat;\n}();\nexports.XMLFormat = XMLFormat;","map":null,"metadata":{},"sourceType":"script"}