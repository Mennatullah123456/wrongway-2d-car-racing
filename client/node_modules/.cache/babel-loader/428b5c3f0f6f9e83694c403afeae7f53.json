{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport { MASK_TYPES } from '@pixi/constants';\nimport { settings } from '@pixi/settings';\nvar MaskData = /*#__PURE__*/function () {\n  function MaskData() {\n    var maskObject = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    _classCallCheck(this, MaskData);\n    this.type = MASK_TYPES.NONE;\n    this.autoDetect = true;\n    this.maskObject = maskObject || null;\n    this.pooled = false;\n    this.isMaskData = true;\n    this.resolution = null;\n    this.multisample = settings.FILTER_MULTISAMPLE;\n    this.enabled = true;\n    this.colorMask = 15;\n    this._filters = null;\n    this._stencilCounter = 0;\n    this._scissorCounter = 0;\n    this._scissorRect = null;\n    this._scissorRectLocal = null;\n    this._colorMask = 15;\n    this._target = null;\n  }\n  _createClass(MaskData, [{\n    key: \"reset\",\n    value: function reset() {\n      if (this.pooled) {\n        this.maskObject = null;\n        this.type = MASK_TYPES.NONE;\n        this.autoDetect = true;\n      }\n      this._target = null;\n      this._scissorRectLocal = null;\n    }\n  }, {\n    key: \"copyCountersOrReset\",\n    value: function copyCountersOrReset(maskAbove) {\n      if (maskAbove) {\n        this._stencilCounter = maskAbove._stencilCounter;\n        this._scissorCounter = maskAbove._scissorCounter;\n        this._scissorRect = maskAbove._scissorRect;\n      } else {\n        this._stencilCounter = 0;\n        this._scissorCounter = 0;\n        this._scissorRect = null;\n      }\n    }\n  }, {\n    key: \"filter\",\n    get: function get() {\n      return this._filters ? this._filters[0] : null;\n    },\n    set: function set(value) {\n      if (value) {\n        if (this._filters) {\n          this._filters[0] = value;\n        } else {\n          this._filters = [value];\n        }\n      } else {\n        this._filters = null;\n      }\n    }\n  }]);\n  return MaskData;\n}();\nexport { MaskData };","map":null,"metadata":{},"sourceType":"module"}