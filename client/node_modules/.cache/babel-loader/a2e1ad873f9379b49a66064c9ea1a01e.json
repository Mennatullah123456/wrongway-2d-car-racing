{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar Runner = /*#__PURE__*/function () {\n  function Runner(name) {\n    _classCallCheck(this, Runner);\n    this.items = [];\n    this._name = name;\n    this._aliasCount = 0;\n  }\n  _createClass(Runner, [{\n    key: \"emit\",\n    value: function emit(a0, a1, a2, a3, a4, a5, a6, a7) {\n      if (arguments.length > 8) {\n        throw new Error(\"max arguments reached\");\n      }\n      var name = this.name,\n        items = this.items;\n      this._aliasCount++;\n      for (var i = 0, len = items.length; i < len; i++) {\n        items[i][name](a0, a1, a2, a3, a4, a5, a6, a7);\n      }\n      if (items === this.items) {\n        this._aliasCount--;\n      }\n      return this;\n    }\n  }, {\n    key: \"ensureNonAliasedItems\",\n    value: function ensureNonAliasedItems() {\n      if (this._aliasCount > 0 && this.items.length > 1) {\n        this._aliasCount = 0;\n        this.items = this.items.slice(0);\n      }\n    }\n  }, {\n    key: \"add\",\n    value: function add(item) {\n      if (item[this._name]) {\n        this.ensureNonAliasedItems();\n        this.remove(item);\n        this.items.push(item);\n      }\n      return this;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(item) {\n      var index = this.items.indexOf(item);\n      if (index !== -1) {\n        this.ensureNonAliasedItems();\n        this.items.splice(index, 1);\n      }\n      return this;\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(item) {\n      return this.items.includes(item);\n    }\n  }, {\n    key: \"removeAll\",\n    value: function removeAll() {\n      this.ensureNonAliasedItems();\n      this.items.length = 0;\n      return this;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.removeAll();\n      this.items = null;\n      this._name = null;\n    }\n  }, {\n    key: \"empty\",\n    get: function get() {\n      return this.items.length === 0;\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return this._name;\n    }\n  }]);\n  return Runner;\n}();\nObject.defineProperties(Runner.prototype, {\n  dispatch: {\n    value: Runner.prototype.emit\n  },\n  run: {\n    value: Runner.prototype.emit\n  }\n});\nexports.Runner = Runner;","map":null,"metadata":{},"sourceType":"script"}