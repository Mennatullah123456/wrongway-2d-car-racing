{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\nvar _get = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/get\");\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar constants = require('@pixi/constants');\nvar utils = require('@pixi/utils');\nvar Resource = require('./Resource.js');\nvar BaseImageResource = /*#__PURE__*/function (_Resource$Resource) {\n  _inherits(BaseImageResource, _Resource$Resource);\n  function BaseImageResource(source) {\n    var _this;\n    _classCallCheck(this, BaseImageResource);\n    var sourceAny = source;\n    var width = sourceAny.naturalWidth || sourceAny.videoWidth || sourceAny.width;\n    var height = sourceAny.naturalHeight || sourceAny.videoHeight || sourceAny.height;\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BaseImageResource).call(this, width, height));\n    _this.source = source;\n    _this.noSubImage = false;\n    return _this;\n  }\n  _createClass(BaseImageResource, [{\n    key: \"upload\",\n    value: function upload(renderer, baseTexture, glTexture, source) {\n      var gl = renderer.gl;\n      var width = baseTexture.realWidth;\n      var height = baseTexture.realHeight;\n      source = source || this.source;\n      if (typeof HTMLImageElement !== \"undefined\" && source instanceof HTMLImageElement) {\n        if (!source.complete || source.naturalWidth === 0) {\n          return false;\n        }\n      } else if (typeof HTMLVideoElement !== \"undefined\" && source instanceof HTMLVideoElement) {\n        if (source.readyState <= 1 && source.buffered.length === 0) {\n          return false;\n        }\n      }\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, baseTexture.alphaMode === constants.ALPHA_MODES.UNPACK);\n      if (!this.noSubImage && baseTexture.target === gl.TEXTURE_2D && glTexture.width === width && glTexture.height === height) {\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, baseTexture.format, glTexture.type, source);\n      } else {\n        glTexture.width = width;\n        glTexture.height = height;\n        gl.texImage2D(baseTexture.target, 0, glTexture.internalFormat, baseTexture.format, glTexture.type, source);\n      }\n      return true;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (this.destroyed) {\n        return;\n      }\n      var source = this.source;\n      var width = source.naturalWidth || source.videoWidth || source.width;\n      var height = source.naturalHeight || source.videoHeight || source.height;\n      this.resize(width, height);\n      _get(_getPrototypeOf(BaseImageResource.prototype), \"update\", this).call(this);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.source = null;\n    }\n  }], [{\n    key: \"crossOrigin\",\n    value: function crossOrigin(element, url, crossorigin) {\n      if (crossorigin === void 0 && !url.startsWith(\"data:\")) {\n        element.crossOrigin = utils.determineCrossOrigin(url);\n      } else if (crossorigin !== false) {\n        element.crossOrigin = typeof crossorigin === \"string\" ? crossorigin : \"anonymous\";\n      }\n    }\n  }]);\n  return BaseImageResource;\n}(Resource.Resource);\nexports.BaseImageResource = BaseImageResource;","map":null,"metadata":{},"sourceType":"script"}