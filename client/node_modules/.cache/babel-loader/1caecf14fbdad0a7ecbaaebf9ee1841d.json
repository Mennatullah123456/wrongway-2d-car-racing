{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\97150\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport { Runner } from '@pixi/runner';\nimport { BaseTexture } from '../textures/BaseTexture.mjs';\nimport { DepthResource } from '../textures/resources/DepthResource.mjs';\nimport { MSAA_QUALITY, SCALE_MODES, MIPMAP_MODES, FORMATS, TYPES } from '@pixi/constants';\nvar Framebuffer = /*#__PURE__*/function () {\n  function Framebuffer(width, height) {\n    _classCallCheck(this, Framebuffer);\n    this.width = Math.round(width || 100);\n    this.height = Math.round(height || 100);\n    this.stencil = false;\n    this.depth = false;\n    this.dirtyId = 0;\n    this.dirtyFormat = 0;\n    this.dirtySize = 0;\n    this.depthTexture = null;\n    this.colorTextures = [];\n    this.glFramebuffers = {};\n    this.disposeRunner = new Runner(\"disposeFramebuffer\");\n    this.multisample = MSAA_QUALITY.NONE;\n  }\n  _createClass(Framebuffer, [{\n    key: \"addColorTexture\",\n    value: function addColorTexture() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var texture = arguments.length > 1 ? arguments[1] : undefined;\n      this.colorTextures[index] = texture || new BaseTexture(null, {\n        scaleMode: SCALE_MODES.NEAREST,\n        resolution: 1,\n        mipmap: MIPMAP_MODES.OFF,\n        width: this.width,\n        height: this.height\n      });\n      this.dirtyId++;\n      this.dirtyFormat++;\n      return this;\n    }\n  }, {\n    key: \"addDepthTexture\",\n    value: function addDepthTexture(texture) {\n      this.depthTexture = texture || new BaseTexture(new DepthResource(null, {\n        width: this.width,\n        height: this.height\n      }), {\n        scaleMode: SCALE_MODES.NEAREST,\n        resolution: 1,\n        width: this.width,\n        height: this.height,\n        mipmap: MIPMAP_MODES.OFF,\n        format: FORMATS.DEPTH_COMPONENT,\n        type: TYPES.UNSIGNED_SHORT\n      });\n      this.dirtyId++;\n      this.dirtyFormat++;\n      return this;\n    }\n  }, {\n    key: \"enableDepth\",\n    value: function enableDepth() {\n      this.depth = true;\n      this.dirtyId++;\n      this.dirtyFormat++;\n      return this;\n    }\n  }, {\n    key: \"enableStencil\",\n    value: function enableStencil() {\n      this.stencil = true;\n      this.dirtyId++;\n      this.dirtyFormat++;\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      width = Math.round(width);\n      height = Math.round(height);\n      if (width === this.width && height === this.height) return;\n      this.width = width;\n      this.height = height;\n      this.dirtyId++;\n      this.dirtySize++;\n      for (var i = 0; i < this.colorTextures.length; i++) {\n        var texture = this.colorTextures[i];\n        var resolution = texture.resolution;\n        texture.setSize(width / resolution, height / resolution);\n      }\n      if (this.depthTexture) {\n        var _resolution = this.depthTexture.resolution;\n        this.depthTexture.setSize(width / _resolution, height / _resolution);\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.disposeRunner.emit(this, false);\n    }\n  }, {\n    key: \"destroyDepthTexture\",\n    value: function destroyDepthTexture() {\n      if (this.depthTexture) {\n        this.depthTexture.destroy();\n        this.depthTexture = null;\n        ++this.dirtyId;\n        ++this.dirtyFormat;\n      }\n    }\n  }, {\n    key: \"colorTexture\",\n    get: function get() {\n      return this.colorTextures[0];\n    }\n  }]);\n  return Framebuffer;\n}();\nexport { Framebuffer };","map":null,"metadata":{},"sourceType":"module"}